{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SCAAD,EAAAC,EAAA,SAEO,SAASC,EAAeC,IAG/BC,eAA2BC,GACzB,MAAMC,EAAQC,SAASC,cAAc,yBAGrCF,EAAMG,UAAUC,OAAO,aAGNH,SAASC,cAAc,iBAC/BG,iBAAiB,SAAS,IAAML,EAAMG,UAAUG,IAAI,eAE7D,MAAMC,EAAYN,SAASC,cAAc,eACnCM,EAAYP,SAASC,cAAc,qBACnCO,EAAcR,SAASC,cAAc,uBACrCQ,EAAaT,SAASC,cAAc,4BAEpCS,QAAc,EAAAjB,EAAAkB,cAAab,GAGjC,SAASc,EAAWC,GAClB,OAAIA,EAAKC,WAAWC,OAAS,EACpBF,EAAKG,QAAQ,GACRH,C,CAGhBP,EAAUW,YAAcP,EAAMQ,MAC9BV,EAAYW,IAAM,uCAAuCT,EAAMU,cAG/Db,EAAUc,UAAY,gFACqDT,EACzEF,EAAMY,2BACOZ,EAAMa,8DACsBb,EAAMc,kEACFd,EAAMe,eAAeC,4DAC9BhB,EAAMiB,OAAOC,KACjDC,GAAO,IAAMA,EAAIC,iBAInBrB,EAAWQ,YAAcP,EAAMqB,Q,CAzC/BC,CAAYpC,EAAUqC,G,CDCxB,MAAMC,EAAYlC,SAASC,cAAc,iBAIdJ,WACzB,MAAMsC,QAAa,EAAA1C,EAAA2C,qBAAoB,GACvCC,QAAQC,IAAIH,EAAKI,KAAKC,SACtB,MAAM9B,EAAQyB,EAAKI,KAAKC,QACxB9B,EAAMkB,KAAIa,IACRJ,QAAQC,IAAIG,EAAQ,IAEX/B,EAOGkB,KAAIlB,IAChB,MAAMgC,EAAO1C,SAAS2C,cAAc,kBACpCD,EAAKxC,UAAUG,IAAI,cACnBqC,EAAKrB,UAAY,iDACfX,EAAMU,uJAIcV,EAAMQ,2GAGN0B,OAAOC,OAAOnC,EAAMoC,wHAGpB,IAAIC,KAAKrC,EAAMsC,cAAcC,kEAGnDf,EAAUgB,YAAYR,GACtBA,EAAKtC,iBAAiB,SAAS,IAAMT,EAAee,IAAO,GAzB5C,EAGnByC","sources":["src/js/movie-gallery.js","src/js/movie-modal.js"],"sourcesContent":["import { fetchTrendingMovies, getMovieInfo } from './API-requests.js';\nimport { showMovieModal } from './movie-modal.js';\n\n// DOM elements\nconst movieList = document.querySelector('.card-gallery');\nconst LOCALSTORAGE_KEY = {};\n\n// fuction that returns trending movies\nconst showTrendingMovies = async () => {\n  const list = await fetchTrendingMovies(1);\n  console.log(list.data.results);\n  const movie = list.data.results;\n  movie.map(element => {\n    console.log(element);\n  });\n  renderInfo(movie);\n};\n\nshowTrendingMovies();\n\n// function that renders movie info to the dom\nfunction renderInfo(movies) {\n  return movies.map(movie => {\n    const card = document.createElement('div.movie-card');\n    card.classList.add('movie-card');\n    card.innerHTML = `<img src=\"https://image.tmdb.org/t/p/original/${\n      movie.poster_path\n    }\" class=\"movie-poster\"/>\n                <ul class=\"movie_info\">\n                    <li class=\"movie_title\">\n                        ${movie.title}\n                    </li>\n                    <li class=\"movie_genre\">\n                        ${Object.values(movie.genre_ids)};\n                    </li>\n                    <li class=\"movie_release-date\">\n                        ${new Date(movie.release_date).getFullYear()}\n                    </li>\n                </ul>`;\n    movieList.appendChild(card);\n    card.addEventListener('click', () => showMovieModal(movie));\n  });\n}\n// const showMovieCard = (movies) => {\n//     const\n// }\n","import { getMovieInfo } from './API-requests';\n\nexport function showMovieModal(movieData) {\n  renderModal(movieData.id);\n}\nasync function renderModal(movieID) {\n  const modal = document.querySelector('.movie-modal__overlay');\n\n  //show modal\n  modal.classList.toggle('is-hidden');\n\n  //close modal\n  const closeBtn = document.querySelector('.close-button');\n  closeBtn.addEventListener('click', () => modal.classList.add('is-hidden'));\n\n  const movieName = document.querySelector('.movie-name');\n  const movieInfo = document.querySelector('.movie-info-block');\n  const moviePoster = document.querySelector('.modal-movie-poster');\n  const movieAbout = document.querySelector('.movie-about-description');\n\n  const movie = await getMovieInfo(movieID);\n\n  // round average vote like 7.5975\n  function roundVotes(vote) {\n    if (vote.toString().length > 3) {\n      return vote.toFixed(2);\n    } else return vote;\n  }\n  //movie info\n  movieName.textContent = movie.title;\n  moviePoster.src = `https://image.tmdb.org/t/p/original/${movie.poster_path}`;\n\n  //movie details\n  movieInfo.innerHTML = `\n  <p class='movie-info'>Vote / Votes</p> <p><span class='modal-movie-rate'>${roundVotes(\n    movie.vote_average\n  )}</span> /  ${movie.vote_count}</p>\n  <p  class='movie-info'>Popularity</p> <p>${movie.popularity}</p>\n  <p  class='movie-info'>Original Title</p> <p>${movie.original_title.toUpperCase()}</p>\n  <p  class='movie-info'>Genre</p> <p>${movie.genres.map(\n    gen => ' ' + gen.name\n  )}</p>\n  `;\n\n  movieAbout.textContent = movie.overview;\n}\n"],"names":["$5q1tW","parcelRequire","$4281cb08e8defb2a$export$87ab7537a92ac478","movieData","async","movieID","modal","document","querySelector","classList","toggle","addEventListener","add","movieName","movieInfo","moviePoster","movieAbout","movie","getMovieInfo","roundVotes","vote","toString","length","toFixed","textContent","title","src","poster_path","innerHTML","vote_average","vote_count","popularity","original_title","toUpperCase","genres","map","gen","name","overview","$4281cb08e8defb2a$var$renderModal","id","$103e7e6c9cd8a571$var$movieList","list","fetchTrendingMovies","console","log","data","results","element","card","createElement","Object","values","genre_ids","Date","release_date","getFullYear","appendChild","$103e7e6c9cd8a571$var$showTrendingMovies"],"version":3,"file":"index.fce01f85.js.map"}