{"mappings":"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","sources":["src/js/movie-modal.js"],"sourcesContent":["import { getMovieInfo } from './API-requests.js';\nimport { MOVIE__POSTERS__URL, updateMovieModalPosterDimension, updateMoviePosterUrl } from './movie-poster-data.js';\n\nclass Queue {\n  constructor(id, title, genres, release_date, poster_path) {\n    this.id = id;\n    this.title = title;\n    this.genres = genres;\n    this.release_date = release_date;\n    this.poster_path = poster_path;\n  }\n}\n\nconst movieGallery = document.querySelector('.card-gallery');\nlet mylibID = \"\"\nlet mylibtitle = \"\"\nlet mylibgenres = \"\"\nlet mylibrelease_date = \"\"\nlet mylibposter_path = \"\"\nlet checkArrary = -1;\nlet checkclass;\nmovieGallery.addEventListener('click', e => {\n  //get movie id\n  const parent = e.target.closest('div');\n  const movieId = parent.getAttribute('data');\n  mylibID = movieId;\n\n  // show modal after html is rendered. Image is rendering after\n  renderModal(movieId).then(() => modal.classList.toggle('is-hidden'));\n});\n\nconst modal = document.querySelector('.movie-modal__overlay');\n\n\nlet watchArray = [];\nlet queueArray = [];\nlet currentMovie;\nconst movieWatched = document.querySelector('#watchedButton');\nconst movieQueued = document.querySelector('#queuedButton');\nmovieWatched.addEventListener('click', watchedProcess);\nmovieQueued.addEventListener('click', queueProcess);\n\n\nasync function renderModal(movieID) {\n  //close modal\n  const closeBtn = document.querySelector('.close-button');\n  closeBtn.addEventListener('click', () => modal.classList.add('is-hidden'));\n\n  const movieName = document.querySelector('.movie-name');\n  const movieInfo = document.querySelector('.movie-info-block');\n  const moviePoster = document.querySelector('.modal-movie-poster');\n  const movieAbout = document.querySelector('.movie-about-description');\n\n  const movie = await getMovieInfo(movieID);\n\n  // round average vote like 7.5975\n  function roundVotes(vote) {\n    if (vote.toString().length > 3) {\n      return vote.toFixed(2);\n    } else return vote;\n  }\n\n  // MOVIE IMAGE SPECS\n  updateMovieModalPosterDimension();\n  updateMoviePosterUrl();\n\n  //movie info\n  movieName.textContent = movie.title;\n  moviePoster.src = '';\n  moviePoster.src = `${MOVIE__POSTERS__URL}${movie.poster_path}`;\n\n  //movie details\n  movieInfo.innerHTML = `\n  <p class='movie-info'>Vote / Votes</p> <p><span class='modal-movie-rate'>${roundVotes(\n    movie.vote_average\n  )}</span> /  ${movie.vote_count}</p>\n  <p  class='movie-info'>Popularity</p> <p>${movie.popularity}</p>\n  <p  class='movie-info'>Original Title</p> <p>${movie.original_title.toUpperCase()}</p>\n  <p  class='movie-info'>Genre</p> <p>${movie.genres.map(\n    gen => ' ' + gen.name\n  )}</p>\n  `;\n\n  movieAbout.textContent = movie.overview;\n\n  mylibtitle = movie.title\nmylibgenres = movie.genres.map(gen => ' ' + gen.name)\nmylibrelease_date = movie.release_date\nmylibposter_path = movie.poster_path\n \n  const watchSet = (localStorage.getItem('watch') !== null);\n  if (watchSet) {\n    const getWatch = localStorage.getItem('watch')\n    watchArray = JSON.parse(getWatch)\n  \n  }else {\n    watchArray = []\n  }\n    const queueSet = (localStorage.getItem('queue') !== null);\n\n  if (queueSet) {\n    const getqueue = localStorage.getItem('queue')\n    queueArray = JSON.parse(getqueue)\n  } else {\n    queueArray = []\n  }\n  const watchresult = watchArray.findIndex(item=> item.id === mylibID )\n  if (watchresult !== -1) {\n    movieWatched.innerText = \"REMOVE FROM WATCHED\"\n    checkclass = movieWatched.matches('.add-to-queue');\n    if (checkclass) {\n      movieWatched.classList.toggle(\"add-to-queue\");\n      movieWatched.classList.toggle(\"add-to-watched\");\n    }\n  } else {\n    movieWatched.innerText = \"ADD TO WATCHED\"\n    checkclass = movieWatched.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieWatched.classList.toggle(\"add-to-watched\");\n      movieWatched.classList.toggle(\"add-to-queue\");\n      \n    }\n  } ;\n\n  const queueresult = queueArray.findIndex(item=> item.id === mylibID )\n \n  if (queueresult !== -1) {\n    movieQueued.innerText = \"REMOVE FROM QUEUE\" \n    checkclass = movieQueued.matches('.add-to-queue');\n    if (checkclass) {\n      movieQueued.classList.toggle(\"add-to-queue\");\n      movieQueued.classList.toggle(\"add-to-watched\");\n    }\n   } else {\n    movieQueued.innerText = \"ADD TO QUEUE\"\n     checkclass = movieQueued.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieQueued.classList.toggle(\"add-to-queue\");\n      movieQueued.classList.toggle(\"add-to-watched\");\n    }\n\n  };\n\n}\n\n\nfunction queueProcess() {\n  const queueSet = (localStorage.getItem('queue') !== null);\n   if (queueSet) {\n    const getqueue = localStorage.getItem('queue')\n   queueArray = JSON.parse(getqueue)\n     \n\n   } else {\n     queueArray = []\n   }\n\n  checkArrary = queueArray.findIndex(item=> item.id === mylibID )\n  if (checkArrary === -1) {\n   const queue = new Queue(mylibID, mylibtitle, mylibgenres, mylibrelease_date, mylibposter_path)\nqueueArray.push(queue)\n    localStorage.setItem('queue', JSON.stringify(queueArray))\n    movieQueued.innerText = \"REMOVE FROM QUEUE\"\n    checkclass = movieQueued.matches('.add-to-queue');\n    if (checkclass) {\n      movieQueued.classList.toggle(\"add-to-queue\");\n      movieQueued.classList.toggle(\"add-to-watched\");\n    }\n  \n  } else {\n     queueArray.splice(checkArrary, 1)\n        localStorage.setItem('queue', JSON.stringify(queueArray))\n    movieQueued.innerText = \"ADD TO QUEUE\"\n     checkclass = movieQueued.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieQueued.classList.toggle(\"add-to-queue\");\n      movieQueued.classList.toggle(\"add-to-watched\");\n    }\n      }\n    }\n  \n\nfunction watchedProcess() {\n     const queueSet = (localStorage.getItem('watch') !== null);\n   if (queueSet) {\n    const getwatch = localStorage.getItem('watch')\n   watchArray = JSON.parse(getwatch)\n     \n\n   } else {\n     watchArray = []\n   }\nconsole.log(watchArray)\n  checkArrary = watchArray.findIndex(item => item.id === mylibID)\n  console.log(checkArrary)\n  if (checkArrary === -1) {\n    const queue = new Queue(mylibID, mylibtitle, mylibgenres, mylibrelease_date, mylibposter_path)\n    console.log\nwatchArray.push(queue)\n    localStorage.setItem('watch', JSON.stringify(watchArray))\n    movieWatched.innerText = \"REMOVE FROM WATCHED\"\ncheckclass = movieWatched.matches('.add-to-queue');\n    if (checkclass) {\n      movieWatched.classList.toggle(\"add-to-queue\");\n      movieWatched.classList.toggle(\"add-to-watched\");\n    }\n    \n  \n  } else {\n     watchArray.splice(checkArrary, 1)\n        localStorage.setItem('watch', JSON.stringify(watchArray))\n    movieWatched.innerText = \"ADD TO WATCHED\"\n     checkclass = movieWatched.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieWatched.classList.toggle(\"add-to-queue\");\n      movieWatched.classList.toggle(\"add-to-watched\");\n    }\n      }\n    }\n"],"names":["$5q1tW","parcelRequire","$4281cb08e8defb2a$var$Queue","constructor","id","title","genres","release_date","poster_path","this","$4281cb08e8defb2a$var$movieGallery","document","querySelector","$4281cb08e8defb2a$var$checkclass","$4281cb08e8defb2a$var$mylibID","$4281cb08e8defb2a$var$mylibtitle","$4281cb08e8defb2a$var$mylibgenres","$4281cb08e8defb2a$var$mylibrelease_date","$4281cb08e8defb2a$var$mylibposter_path","$4281cb08e8defb2a$var$checkArrary","addEventListener","e","movieId","target","closest","getAttribute","async","movieID","$4281cb08e8defb2a$var$modal","classList","add","movieName","movieInfo","moviePoster","movieAbout","movie","getMovieInfo","roundVotes","vote","toString","length","toFixed","$ioFHx","updateMovieModalPosterDimension","updateMoviePosterUrl","textContent","src","MOVIE__POSTERS__URL","innerHTML","vote_average","vote_count","popularity","original_title","toUpperCase","map","gen","name","overview","localStorage","getItem","getWatch","$4281cb08e8defb2a$var$watchArray","JSON","parse","getqueue","$4281cb08e8defb2a$var$queueArray","findIndex","item","$4281cb08e8defb2a$var$movieWatched","innerText","matches","toggle","$4281cb08e8defb2a$var$movieQueued","$4281cb08e8defb2a$var$renderModal","then","getwatch","console","log","queue","push","setItem","stringify","splice"],"version":3,"file":"index.896ae1a0.js.map"}