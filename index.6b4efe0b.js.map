{"mappings":"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","sources":["src/js/movie-modal.js"],"sourcesContent":["import { getMovieInfo } from './API-requests.js';\nimport {\n  MOVIE__POSTERS__URL,\n  updateMovieModalPosterDimension,\n  updateMoviePosterUrl,\n  movieModalPosterWidth,\n  movieModalPosterHeight,\n} from './movie-poster-data.js';\n\nclass Queue {\n  constructor(id, title, genres, release_date, poster_path) {\n    this.id = id;\n    this.title = title;\n    this.genres = genres;\n    this.release_date = release_date;\n    this.poster_path = poster_path;\n  }\n}\n\nconst movieGallery = document.querySelector('.card-gallery'); // my-library-update\nconst myLibaryGallery = document.querySelector('.mylibrary-gallery');\nlet mylibID = \"\"\nlet mylibtitle = \"\"\nlet mylibgenres = \"\"\nlet mylibrelease_date = \"\"\nlet mylibposter_path = \"\"\n\nlet checkArrary = -1;\nlet checkclass;\nmovieGallery.addEventListener('click', e => {\n  //get movie id\n  const parent = e.target.closest('div');\n  const movieId = parent.getAttribute('data');\n  mylibID = movieId;\n  // show modal after html is rendered. Image is rendering after\n  renderModal(movieId).then(() => modal.classList.toggle('is-hidden'));\n});\n\nmyLibaryGallery.addEventListener('click', e => {\n  //get movie id\n  \n  console.log('image clicked')\n  const parent = e.target.closest('div');\n  const movieId = parent.getAttribute('data');\n  mylibID = movieId;\n//  renderModal(movieId);\n    renderModal(movieId).then(() => modal.classList.toggle('is-hidden'));\n\n});\n\nconst modal = document.querySelector('.movie-modal__overlay');\n\nlet watchArray = [];\nlet queueArray = [];\nlet currentMovie;\nconst movieWatched = document.querySelector('#watchedButton');\nconst movieQueued = document.querySelector('#queuedButton');\nmovieWatched.addEventListener('click', watchedProcess);\nmovieQueued.addEventListener('click', queueProcess);\n\nasync function renderModal(movieID) {\n  //close modal\n  const closeBtn = document.querySelector('.close-button');\n  closeBtn.addEventListener('click', () => modal.classList.add('is-hidden'));\n\n  const movieName = document.querySelector('.movie-name');\n  const movieInfo = document.querySelector('.movie-info-block');\n  const moviePoster = document.querySelector('.modal-movie-poster');\n  const movieAbout = document.querySelector('.movie-about-description');\n\n  moviePoster.style.display = 'block';\n\n  const movie = await getMovieInfo(movieID);\n\n  // round average vote like 7.5975\n  function roundVotes(vote) {\n    if (vote.toString().length > 3) {\n      return vote.toFixed(2);\n    } else return vote;\n  }\n\n  // MOVIE IMAGE SPECS\n  updateMovieModalPosterDimension();\n  updateMoviePosterUrl();\n\n  //movie info\n  movieName.textContent = movie.title;\n  moviePoster.src = '';\n  moviePoster.src = `${MOVIE__POSTERS__URL}${movie.poster_path}`;\n  moviePoster.alt = `${movie.title}`;\n  moviePoster.width = `${movieModalPosterWidth}`;\n  moviePoster.height = `${movieModalPosterHeight}`;\n\n  //movie details\n  movieInfo.innerHTML = `\n  <p class='movie-info'>Vote / Votes</p> <p><span class='modal-movie-rate'>${roundVotes(\n    movie.vote_average\n  )}</span> /  ${movie.vote_count}</p>\n  <p  class='movie-info'>Popularity</p> <p>${movie.popularity}</p>\n  <p  class='movie-info'>Original Title</p> <p>${movie.original_title.toUpperCase()}</p>\n  <p  class='movie-info'>Genre</p> <p>${movie.genres.map(\n    gen => ' ' + gen.name\n  )}</p>\n  `;\n\n  movieAbout.textContent = movie.overview;\n\n  mylibtitle = movie.title;\n  mylibgenres = movie.genres.map(gen => ' ' + gen.name);\n  mylibrelease_date = movie.release_date;\n  mylibposter_path = movie.poster_path;\n\n  const watchSet = localStorage.getItem('watch') !== null;\n  if (watchSet) {\n    const getWatch = localStorage.getItem('watch');\n    watchArray = JSON.parse(getWatch);\n  } else {\n    watchArray = [];\n  }\n  const queueSet = localStorage.getItem('queue') !== null;\n\n  if (queueSet) {\n    const getqueue = localStorage.getItem('queue');\n    queueArray = JSON.parse(getqueue);\n  } else {\n    queueArray = [];\n  }\n  const watchresult = watchArray.findIndex(item => item.id === mylibID);\n  if (watchresult !== -1) {\n    movieWatched.innerText = 'REMOVE FROM WATCHED';\n    checkclass = movieWatched.matches('.add-to-queue');\n    if (checkclass) {\n      movieWatched.classList.toggle('add-to-queue');\n      movieWatched.classList.toggle('add-to-watched');\n    }\n  } else {\n    movieWatched.innerText = 'ADD TO WATCHED';\n    checkclass = movieWatched.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieWatched.classList.toggle('add-to-watched');\n      movieWatched.classList.toggle('add-to-queue');\n    }\n  }\n\n  const queueresult = queueArray.findIndex(item => item.id === mylibID);\n\n  if (queueresult !== -1) {\n    movieQueued.innerText = 'REMOVE FROM QUEUE';\n    checkclass = movieQueued.matches('.add-to-queue');\n    if (checkclass) {\n      movieQueued.classList.toggle('add-to-queue');\n      movieQueued.classList.toggle('add-to-watched');\n    }\n  } else {\n    movieQueued.innerText = 'ADD TO QUEUE';\n    checkclass = movieQueued.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieQueued.classList.toggle('add-to-queue');\n      movieQueued.classList.toggle('add-to-watched');\n    }\n  }\n}\n\nfunction queueProcess() {\n  const queueSet = localStorage.getItem('queue') !== null;\n  if (queueSet) {\n    const getqueue = localStorage.getItem('queue');\n    queueArray = JSON.parse(getqueue);\n  } else {\n    queueArray = [];\n  }\n\n  checkArrary = queueArray.findIndex(item => item.id === mylibID);\n  if (checkArrary === -1) {\n    const queue = new Queue(\n      mylibID,\n      mylibtitle,\n      mylibgenres,\n      mylibrelease_date,\n      mylibposter_path\n    );\n    queueArray.push(queue);\n    localStorage.setItem('queue', JSON.stringify(queueArray));\n    movieQueued.innerText = 'REMOVE FROM QUEUE';\n    checkclass = movieQueued.matches('.add-to-queue');\n    if (checkclass) {\n      movieQueued.classList.toggle('add-to-queue');\n      movieQueued.classList.toggle('add-to-watched');\n    }\n  } else {\n    queueArray.splice(checkArrary, 1);\n    localStorage.setItem('queue', JSON.stringify(queueArray));\n    movieQueued.innerText = 'ADD TO QUEUE';\n    checkclass = movieQueued.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieQueued.classList.toggle('add-to-queue');\n      movieQueued.classList.toggle('add-to-watched');\n    }\n  }\n}\n\nfunction watchedProcess() {\n  const queueSet = localStorage.getItem('watch') !== null;\n  if (queueSet) {\n    const getwatch = localStorage.getItem('watch');\n    watchArray = JSON.parse(getwatch);\n  } else {\n    watchArray = [];\n  }\n  console.log(watchArray);\n  checkArrary = watchArray.findIndex(item => item.id === mylibID);\n  console.log(checkArrary);\n  if (checkArrary === -1) {\n    const queue = new Queue(\n      mylibID,\n      mylibtitle,\n      mylibgenres,\n      mylibrelease_date,\n      mylibposter_path\n    );\n    console.log;\n    watchArray.push(queue);\n    localStorage.setItem('watch', JSON.stringify(watchArray));\n    movieWatched.innerText = 'REMOVE FROM WATCHED';\n    checkclass = movieWatched.matches('.add-to-queue');\n    if (checkclass) {\n      movieWatched.classList.toggle('add-to-queue');\n      movieWatched.classList.toggle('add-to-watched');\n    }\n  } else {\n    watchArray.splice(checkArrary, 1);\n    localStorage.setItem('watch', JSON.stringify(watchArray));\n    movieWatched.innerText = 'ADD TO WATCHED';\n    checkclass = movieWatched.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieWatched.classList.toggle('add-to-queue');\n      movieWatched.classList.toggle('add-to-watched');\n    }\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$8659643f5d4aff8d$var$Queue","Queue","id","title","genres","release_date","poster_path","this","$8659643f5d4aff8d$var$movieGallery","document","querySelector","$8659643f5d4aff8d$var$myLibaryGallery","$8659643f5d4aff8d$var$mylibID","$8659643f5d4aff8d$var$mylibtitle","$8659643f5d4aff8d$var$mylibgenres","$8659643f5d4aff8d$var$mylibrelease_date","$8659643f5d4aff8d$var$mylibposter_path","$8659643f5d4aff8d$var$checkArrary","addEventListener","e","movieId","target","closest","getAttribute","$8659643f5d4aff8d$var$renderModal","then","$8659643f5d4aff8d$var$modal","classList","toggle","console","log","$8659643f5d4aff8d$var$watchArray","$8659643f5d4aff8d$var$queueArray","$8659643f5d4aff8d$var$movieWatched","$8659643f5d4aff8d$var$movieQueued","movieID","$8659643f5d4aff8d$var$_renderModal","apply","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","movieName","movieInfo","moviePoster","movieAbout","movie","roundVotes","getWatch","getqueue","vote","toString","length","toFixed","add","style","display","$5kFwL","getMovieInfo","_ctx","sent","$96x7w","updateMovieModalPosterDimension","updateMoviePosterUrl","textContent","src","concat","MOVIE__POSTERS__URL","alt","width","movieModalPosterWidth","height","movieModalPosterHeight","innerHTML","vote_average","vote_count","popularity","original_title","toUpperCase","map","gen","name","overview","localStorage","getItem","JSON","parse","findIndex","item","innerText","matches","getwatch","queue","push","setItem","stringify","splice"],"version":3,"file":"index.6b4efe0b.js.map"}