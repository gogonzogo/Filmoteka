{"mappings":"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","sources":["src/js/movie-modal.js"],"sourcesContent":["import { getMovieInfo } from './API-requests.js';\nimport {\n  MOVIE__POSTERS__URL,\n  updateMovieModalPosterDimension,\n  updateMoviePosterUrl,\n  movieModalPosterWidth,\n  movieModalPosterHeight,\n} from './movie-poster-data.js';\n\nclass Queue {\n  constructor(id, title, genres, release_date, poster_path) {\n    this.id = id;\n    this.title = title;\n    this.genres = genres;\n    this.release_date = release_date;\n    this.poster_path = poster_path;\n  }\n}\n\nconst movieGallery = document.querySelector('.card-gallery');\nlet mylibID = '';\nlet mylibtitle = '';\nlet mylibgenres = '';\nlet mylibrelease_date = '';\nlet mylibposter_path = '';\nlet checkArrary = -1;\nlet checkclass;\nmovieGallery.addEventListener('click', e => {\n  //get movie id\n  const parent = e.target.closest('div');\n  const movieId = parent.getAttribute('data');\n  mylibID = movieId;\n\n  // show modal after html is rendered. Image is rendering after\n  renderModal(movieId).then(() => modal.classList.toggle('is-hidden'));\n});\n\nconst modal = document.querySelector('.movie-modal__overlay');\n\nlet watchArray = [];\nlet queueArray = [];\nlet currentMovie;\nconst movieWatched = document.querySelector('#watchedButton');\nconst movieQueued = document.querySelector('#queuedButton');\nmovieWatched.addEventListener('click', watchedProcess);\nmovieQueued.addEventListener('click', queueProcess);\n\nasync function renderModal(movieID) {\n  //close modal\n  const closeBtn = document.querySelector('.close-button');\n  closeBtn.addEventListener('click', () => modal.classList.add('is-hidden'));\n\n  const movieName = document.querySelector('.movie-name');\n  const movieInfo = document.querySelector('.movie-info-block');\n  const moviePoster = document.querySelector('.modal-movie-poster');\n  const movieAbout = document.querySelector('.movie-about-description');\n\n  moviePoster.style.display = 'block';\n\n  const movie = await getMovieInfo(movieID);\n\n  // round average vote like 7.5975\n  function roundVotes(vote) {\n    if (vote.toString().length > 3) {\n      return vote.toFixed(2);\n    } else return vote;\n  }\n\n  // MOVIE IMAGE SPECS\n  updateMovieModalPosterDimension();\n  updateMoviePosterUrl();\n\n  //movie info\n  movieName.textContent = movie.title;\n  moviePoster.src = '';\n  moviePoster.src = `${MOVIE__POSTERS__URL}${movie.poster_path}`;\n  moviePoster.alt = `${movie.title}`;\n  moviePoster.width = `${movieModalPosterWidth}`;\n  moviePoster.height = `${movieModalPosterHeight}`;\n\n  //movie details\n  movieInfo.innerHTML = `\n  <p class='movie-info'>Vote / Votes</p> <p><span class='modal-movie-rate'>${roundVotes(\n    movie.vote_average\n  )}</span> /  ${movie.vote_count}</p>\n  <p  class='movie-info'>Popularity</p> <p>${movie.popularity}</p>\n  <p  class='movie-info'>Original Title</p> <p>${movie.original_title.toUpperCase()}</p>\n  <p  class='movie-info'>Genre</p> <p>${movie.genres.map(\n    gen => ' ' + gen.name\n  )}</p>\n  `;\n\n  movieAbout.textContent = movie.overview;\n\n  mylibtitle = movie.title;\n  mylibgenres = movie.genres.map(gen => ' ' + gen.name);\n  mylibrelease_date = movie.release_date;\n  mylibposter_path = movie.poster_path;\n\n  const watchSet = localStorage.getItem('watch') !== null;\n  if (watchSet) {\n    const getWatch = localStorage.getItem('watch');\n    watchArray = JSON.parse(getWatch);\n  } else {\n    watchArray = [];\n  }\n  const queueSet = localStorage.getItem('queue') !== null;\n\n  if (queueSet) {\n    const getqueue = localStorage.getItem('queue');\n    queueArray = JSON.parse(getqueue);\n  } else {\n    queueArray = [];\n  }\n  const watchresult = watchArray.findIndex(item => item.id === mylibID);\n  if (watchresult !== -1) {\n    movieWatched.innerText = 'REMOVE FROM WATCHED';\n    checkclass = movieWatched.matches('.add-to-queue');\n    if (checkclass) {\n      movieWatched.classList.toggle('add-to-queue');\n      movieWatched.classList.toggle('add-to-watched');\n    }\n  } else {\n    movieWatched.innerText = 'ADD TO WATCHED';\n    checkclass = movieWatched.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieWatched.classList.toggle('add-to-watched');\n      movieWatched.classList.toggle('add-to-queue');\n    }\n  }\n\n  const queueresult = queueArray.findIndex(item => item.id === mylibID);\n\n  if (queueresult !== -1) {\n    movieQueued.innerText = 'REMOVE FROM QUEUE';\n    checkclass = movieQueued.matches('.add-to-queue');\n    if (checkclass) {\n      movieQueued.classList.toggle('add-to-queue');\n      movieQueued.classList.toggle('add-to-watched');\n    }\n  } else {\n    movieQueued.innerText = 'ADD TO QUEUE';\n    checkclass = movieQueued.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieQueued.classList.toggle('add-to-queue');\n      movieQueued.classList.toggle('add-to-watched');\n    }\n  }\n}\n\nfunction queueProcess() {\n  const queueSet = localStorage.getItem('queue') !== null;\n  if (queueSet) {\n    const getqueue = localStorage.getItem('queue');\n    queueArray = JSON.parse(getqueue);\n  } else {\n    queueArray = [];\n  }\n\n  checkArrary = queueArray.findIndex(item => item.id === mylibID);\n  if (checkArrary === -1) {\n    const queue = new Queue(\n      mylibID,\n      mylibtitle,\n      mylibgenres,\n      mylibrelease_date,\n      mylibposter_path\n    );\n    queueArray.push(queue);\n    localStorage.setItem('queue', JSON.stringify(queueArray));\n    movieQueued.innerText = 'REMOVE FROM QUEUE';\n    checkclass = movieQueued.matches('.add-to-queue');\n    if (checkclass) {\n      movieQueued.classList.toggle('add-to-queue');\n      movieQueued.classList.toggle('add-to-watched');\n    }\n  } else {\n    queueArray.splice(checkArrary, 1);\n    localStorage.setItem('queue', JSON.stringify(queueArray));\n    movieQueued.innerText = 'ADD TO QUEUE';\n    checkclass = movieQueued.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieQueued.classList.toggle('add-to-queue');\n      movieQueued.classList.toggle('add-to-watched');\n    }\n  }\n}\n\nfunction watchedProcess() {\n  const queueSet = localStorage.getItem('watch') !== null;\n  if (queueSet) {\n    const getwatch = localStorage.getItem('watch');\n    watchArray = JSON.parse(getwatch);\n  } else {\n    watchArray = [];\n  }\n  console.log(watchArray);\n  checkArrary = watchArray.findIndex(item => item.id === mylibID);\n  console.log(checkArrary);\n  if (checkArrary === -1) {\n    const queue = new Queue(\n      mylibID,\n      mylibtitle,\n      mylibgenres,\n      mylibrelease_date,\n      mylibposter_path\n    );\n    console.log;\n    watchArray.push(queue);\n    localStorage.setItem('watch', JSON.stringify(watchArray));\n    movieWatched.innerText = 'REMOVE FROM WATCHED';\n    checkclass = movieWatched.matches('.add-to-queue');\n    if (checkclass) {\n      movieWatched.classList.toggle('add-to-queue');\n      movieWatched.classList.toggle('add-to-watched');\n    }\n  } else {\n    watchArray.splice(checkArrary, 1);\n    localStorage.setItem('watch', JSON.stringify(watchArray));\n    movieWatched.innerText = 'ADD TO WATCHED';\n    checkclass = movieWatched.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieWatched.classList.toggle('add-to-queue');\n      movieWatched.classList.toggle('add-to-watched');\n    }\n  }\n}\n"],"names":["$5q1tW","parcelRequire","$4281cb08e8defb2a$var$Queue","constructor","id","title","genres","release_date","poster_path","this","$4281cb08e8defb2a$var$movieGallery","document","querySelector","$4281cb08e8defb2a$var$checkclass","$4281cb08e8defb2a$var$mylibID","$4281cb08e8defb2a$var$mylibtitle","$4281cb08e8defb2a$var$mylibgenres","$4281cb08e8defb2a$var$mylibrelease_date","$4281cb08e8defb2a$var$mylibposter_path","$4281cb08e8defb2a$var$checkArrary","addEventListener","e","movieId","target","closest","getAttribute","async","movieID","$4281cb08e8defb2a$var$modal","classList","add","movieName","movieInfo","moviePoster","movieAbout","style","display","movie","getMovieInfo","roundVotes","vote","toString","length","toFixed","$ioFHx","updateMovieModalPosterDimension","updateMoviePosterUrl","textContent","src","MOVIE__POSTERS__URL","alt","width","movieModalPosterWidth","height","movieModalPosterHeight","innerHTML","vote_average","vote_count","popularity","original_title","toUpperCase","map","gen","name","overview","localStorage","getItem","getWatch","$4281cb08e8defb2a$var$watchArray","JSON","parse","getqueue","$4281cb08e8defb2a$var$queueArray","findIndex","item","$4281cb08e8defb2a$var$movieWatched","innerText","matches","toggle","$4281cb08e8defb2a$var$movieQueued","$4281cb08e8defb2a$var$renderModal","then","getwatch","console","log","queue","push","setItem","stringify","splice"],"version":3,"file":"index.6e9c8622.js.map"}