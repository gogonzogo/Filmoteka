{"mappings":"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","sources":["src/js/movie-gallery.js","src/js/movie-modal.js","src/js/genre-list.js"],"sourcesContent":["import { fetchTrendingMovies, getMovieInfo } from './API-requests.js';\nimport { showMovieModal } from './movie-modal.js';\nimport genreList from './genre-list.js';\n\n\n\n// DOM elements\nconst movieList = document.querySelector(\".card-gallery\");\n\n\n\n// fuction that returns trending movies \nconst showTrendingMovies = async () => {\n  const list = await fetchTrendingMovies(1);\n  // console.log(list.data.results)\n  const movie = list.data.results;\n  renderInfo(movie)\n}\n\n\nshowTrendingMovies();\n\n//Function to get genre names\nfunction getGenres(genreList, genreIds) {\n  const arrOfGenresName = genreIds.map(currentId => {\n    const genre = genreList.find(elem => elem.id === currentId);\n\n    return genre.name;\n  });\n\n  const str = arrOfGenresName.reduce((acc, genre, index, arr) => {\n    if (arr.length > 2) {\n      acc = `${arr[0]}, ${arr[1]}`;\n    } else {\n      acc = arr.join(', ');\n    }\n\n    return acc;\n  });\n  return str;\n}\n\n\n\n// function that renders movie info to the dom\nasync function renderInfo(movies) {\n  // const genre = await getMovieInfo();\n  return movies.map((movie) => {\n    const card = document.createElement(\"div.movie-card\")\n    card.classList.add('movie-card');\n    card.innerHTML =\n      `<img src=\"https://image.tmdb.org/t/p/original/${movie.poster_path}\" class=\"movie-poster\"/>\n                <ul class=\"movie_info\">\n                    <li class=\"movie_title\">\n                        ${movie.title}\n                    </li>\n                    <li class=\"movie_genre\">\n                        ${getGenres(genreList, movie.genre_ids)};\n                    </li>\n                    <li class=\"movie_release-date\">\n                        ${new Date(movie.release_date).getFullYear()}\n                    </li>\n                </ul>`;\n    movieList.appendChild(card);\n    card.addEventListener('click', () => showMovieModal(movie));\n  });\n}\n\n\n// const showMovieCard = (movies) => {\n//     const \n// }","import { getMovieInfo } from './API-requests.js';\n\nexport function showMovieModal(movieData) {\n  renderModal(movieData.id);\n}\nasync function renderModal(movieID) {\n  const modal = document.querySelector('.movie-modal__overlay');\n\n  //show modal\n  modal.classList.toggle('is-hidden');\n\n  //close modal\n  const closeBtn = document.querySelector('.close-button');\n  closeBtn.addEventListener('click', () => modal.classList.add('is-hidden'));\n\n  const movieName = document.querySelector('.movie-name');\n  const movieInfo = document.querySelector('.movie-info-block');\n  const moviePoster = document.querySelector('.modal-movie-poster');\n  const movieAbout = document.querySelector('.movie-about-description');\n\n  const movie = await getMovieInfo(movieID);\n  console.log(movie);\n\n  // round average vote like 7.5975\n  function roundVotes(vote) {\n    if (vote.toString().length > 3) {\n      return vote.toFixed(2);\n    } else return vote;\n  }\n  \n  //movie info\n  movieName.textContent = movie.title;\n  moviePoster.src = `https://image.tmdb.org/t/p/original/${movie.poster_path}`;\n\n  //movie details\n  movieInfo.innerHTML = `\n  <p class='movie-info'>Vote / Votes</p> <p><span class='modal-movie-rate'>${roundVotes(\n    movie.vote_average\n  )}</span> /  ${movie.vote_count}</p>\n  <p  class='movie-info'>Popularity</p> <p>${movie.popularity}</p>\n  <p  class='movie-info'>Original Title</p> <p>${movie.original_title.toUpperCase()}</p>\n  <p  class='movie-info'>Genre</p> <p>${movie.genres.map(\n    gen => ' ' + gen.name\n  )}</p>\n  `;\n\n  movieAbout.textContent = movie.overview;\n}\n","export default [\n    {\n      id: 28,\n      name: 'Action',\n    },\n    {\n      id: 12,\n      name: 'Adventure',\n    },\n    {\n      id: 16,\n      name: 'Animation',\n    },\n    {\n      id: 35,\n      name: 'Comedy',\n    },\n    {\n      id: 80,\n      name: 'Crime',\n    },\n    {\n      id: 99,\n      name: 'Documentary',\n    },\n    {\n      id: 18,\n      name: 'Drama',\n    },\n    {\n      id: 10751,\n      name: 'Family',\n    },\n    {\n      id: 14,\n      name: 'Fantasy',\n    },\n    {\n      id: 36,\n      name: 'History',\n    },\n    {\n      id: 27,\n      name: 'Horror',\n    },\n    {\n      id: 10402,\n      name: 'Music',\n    },\n    {\n      id: 9648,\n      name: 'Mystery',\n    },\n    {\n      id: 10749,\n      name: 'Romance',\n    },\n    {\n      id: 878,\n      name: 'Science Fiction',\n    },\n    {\n      id: 10770,\n      name: 'TV Movie',\n    },\n    {\n      id: 53,\n      name: 'Thriller',\n    },\n    {\n      id: 10752,\n      name: 'War',\n    },\n    {\n      id: 37,\n      name: 'Western',\n    },\n  ];"],"names":["$bpxeT","parcelRequire","$8659643f5d4aff8d$export$87ab7537a92ac478","movieData","movieID","$8659643f5d4aff8d$var$_renderModal","apply","this","arguments","$8659643f5d4aff8d$var$renderModal","id","$parcel$interopDefault","$2TvXO","mark","_callee","modal","movieName","movieInfo","moviePoster","movieAbout","movie","roundVotes","vote","toString","length","toFixed","document","querySelector","classList","toggle","addEventListener","add","$5kFwL","getMovieInfo","_ctx","sent","console","log","textContent","title","src","concat","poster_path","innerHTML","vote_average","vote_count","popularity","original_title","toUpperCase","genres","map","gen","name","overview","$a2c743e5244d496c$export$2e2bcd8739ae039","$023c6bba026fc3c7$var$movieList","$023c6bba026fc3c7$var$showTrendingMovies","fetchTrendingMovies","$023c6bba026fc3c7$var$renderInfo","data","results","$023c6bba026fc3c7$var$getGenres","genreList1","genreIds","currentId","find","elem","reduce","acc","genre","index","arr","join","movies","$023c6bba026fc3c7$var$_renderInfo","card","createElement","genre_ids","Date","release_date","getFullYear","appendChild"],"version":3,"file":"index.9d3c0523.js.map"}