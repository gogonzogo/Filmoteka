{"mappings":"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","sources":["src/js/movie-modal.js"],"sourcesContent":["import { getMovieInfo } from './API-requests.js';\nimport {\n  MOVIE__POSTERS__URL,\n  updateMovieModalPosterDimension,\n  updateMoviePosterUrl,\n  movieModalPosterWidth,\n  movieModalPosterHeight,\n} from './movie-poster-data.js';\n\nclass Queue {\n  constructor(id, title, genres, release_date, poster_path) {\n    this.id = id;\n    this.title = title;\n    this.genres = genres;\n    this.release_date = release_date;\n    this.poster_path = poster_path;\n  }\n}\n\nconst movieGallery = document.querySelector('.card-gallery'); //<<<<<<< my-library-update\nconst myLibaryGallery = document.querySelector('.mylibrary-gallery');\nconsole.log(myLibaryGallery)\nlet mylibID = \"\"\nlet mylibtitle = \"\"\nlet mylibgenres = \"\"\nlet mylibrelease_date = \"\"\nlet mylibposter_path = \"\"\n\nlet checkArrary = -1;\nlet checkclass;\nmovieGallery.addEventListener('click', e => {\n  //get movie id\n  const parent = e.target.closest('div');\n  const movieId = parent.getAttribute('data');\n  mylibID = movieId;\n  // show modal after html is rendered. Image is rendering after\n  renderModal(movieId).then(() => modal.classList.toggle('is-hidden'));\n});\n\n\nmyLibaryGallery.addEventListener('click', e => {\n  //get movie id\n  \n  console.log('image clicked')\n  const parent = e.target.closest('div');\n  const movieId = parent.getAttribute('data');\n  mylibID = movieId;\n//  renderModal(movieId);\n    renderModal(movieId).then(() => modal.classList.toggle('is-hidden'));\n\n});\n\nconst modal = document.querySelector('.movie-modal__overlay');\n\nlet watchArray = [];\nlet queueArray = [];\nlet currentMovie;\nconst movieWatched = document.querySelector('#watchedButton');\nconst movieQueued = document.querySelector('#queuedButton');\nmovieWatched.addEventListener('click', watchedProcess);\nmovieQueued.addEventListener('click', queueProcess);\n\nasync function renderModal(movieID) {\n  //close modal\n  const closeBtn = document.querySelector('.close-button');\n  closeBtn.addEventListener('click', () => modal.classList.add('is-hidden'));\n\n  const movieName = document.querySelector('.movie-name');\n  const movieInfo = document.querySelector('.movie-info-block');\n  const moviePoster = document.querySelector('.modal-movie-poster');\n  const movieAbout = document.querySelector('.movie-about-description');\n\n  moviePoster.style.display = 'block';\n\n  const movie = await getMovieInfo(movieID);\n\n  // round average vote like 7.5975\n  function roundVotes(vote) {\n    if (vote.toString().length > 3) {\n      return vote.toFixed(2);\n    } else return vote;\n  }\n\n  // MOVIE IMAGE SPECS\n  updateMovieModalPosterDimension();\n  updateMoviePosterUrl();\n\n  //movie info\n  movieName.textContent = movie.title;\n  moviePoster.src = '';\n  moviePoster.src = `${MOVIE__POSTERS__URL}${movie.poster_path}`;\n  moviePoster.alt = `${movie.title}`;\n  moviePoster.width = `${movieModalPosterWidth}`;\n  moviePoster.height = `${movieModalPosterHeight}`;\n\n  //movie details\n  movieInfo.innerHTML = `\n  <p class='movie-info'>Vote / Votes</p> <p><span class='modal-movie-rate'>${roundVotes(\n    movie.vote_average\n  )}</span> /  ${movie.vote_count}</p>\n  <p  class='movie-info'>Popularity</p> <p>${movie.popularity}</p>\n  <p  class='movie-info'>Original Title</p> <p>${movie.original_title.toUpperCase()}</p>\n  <p  class='movie-info'>Genre</p> <p>${movie.genres.map(\n    gen => ' ' + gen.name\n  )}</p>\n  `;\n\n  movieAbout.textContent = movie.overview;\n\n  mylibtitle = movie.title;\n  mylibgenres = movie.genres.map(gen => ' ' + gen.name);\n  mylibrelease_date = movie.release_date;\n  mylibposter_path = movie.poster_path;\n\n  const watchSet = localStorage.getItem('watch') !== null;\n  if (watchSet) {\n    const getWatch = localStorage.getItem('watch');\n    watchArray = JSON.parse(getWatch);\n  } else {\n    watchArray = [];\n  }\n  const queueSet = localStorage.getItem('queue') !== null;\n\n  if (queueSet) {\n    const getqueue = localStorage.getItem('queue');\n    queueArray = JSON.parse(getqueue);\n  } else {\n    queueArray = [];\n  }\n  const watchresult = watchArray.findIndex(item => item.id === mylibID);\n  if (watchresult !== -1) {\n    movieWatched.innerText = 'REMOVE FROM WATCHED';\n    checkclass = movieWatched.matches('.add-to-queue');\n    if (checkclass) {\n      movieWatched.classList.toggle('add-to-queue');\n      movieWatched.classList.toggle('add-to-watched');\n    }\n  } else {\n    movieWatched.innerText = 'ADD TO WATCHED';\n    checkclass = movieWatched.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieWatched.classList.toggle('add-to-watched');\n      movieWatched.classList.toggle('add-to-queue');\n    }\n  }\n\n  const queueresult = queueArray.findIndex(item => item.id === mylibID);\n\n  if (queueresult !== -1) {\n    movieQueued.innerText = 'REMOVE FROM QUEUE';\n    checkclass = movieQueued.matches('.add-to-queue');\n    if (checkclass) {\n      movieQueued.classList.toggle('add-to-queue');\n      movieQueued.classList.toggle('add-to-watched');\n    }\n  } else {\n    movieQueued.innerText = 'ADD TO QUEUE';\n    checkclass = movieQueued.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieQueued.classList.toggle('add-to-queue');\n      movieQueued.classList.toggle('add-to-watched');\n    }\n  }\n}\n\nfunction queueProcess() {\n  const queueSet = localStorage.getItem('queue') !== null;\n  if (queueSet) {\n    const getqueue = localStorage.getItem('queue');\n    queueArray = JSON.parse(getqueue);\n  } else {\n    queueArray = [];\n  }\n\n  checkArrary = queueArray.findIndex(item => item.id === mylibID);\n  if (checkArrary === -1) {\n    const queue = new Queue(\n      mylibID,\n      mylibtitle,\n      mylibgenres,\n      mylibrelease_date,\n      mylibposter_path\n    );\n    queueArray.push(queue);\n    localStorage.setItem('queue', JSON.stringify(queueArray));\n    movieQueued.innerText = 'REMOVE FROM QUEUE';\n    checkclass = movieQueued.matches('.add-to-queue');\n    if (checkclass) {\n      movieQueued.classList.toggle('add-to-queue');\n      movieQueued.classList.toggle('add-to-watched');\n    }\n  } else {\n    queueArray.splice(checkArrary, 1);\n    localStorage.setItem('queue', JSON.stringify(queueArray));\n    movieQueued.innerText = 'ADD TO QUEUE';\n    checkclass = movieQueued.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieQueued.classList.toggle('add-to-queue');\n      movieQueued.classList.toggle('add-to-watched');\n    }\n  }\n}\n\nfunction watchedProcess() {\n  const queueSet = localStorage.getItem('watch') !== null;\n  if (queueSet) {\n    const getwatch = localStorage.getItem('watch');\n    watchArray = JSON.parse(getwatch);\n  } else {\n    watchArray = [];\n  }\n  console.log(watchArray);\n  checkArrary = watchArray.findIndex(item => item.id === mylibID);\n  console.log(checkArrary);\n  if (checkArrary === -1) {\n    const queue = new Queue(\n      mylibID,\n      mylibtitle,\n      mylibgenres,\n      mylibrelease_date,\n      mylibposter_path\n    );\n    console.log;\n    watchArray.push(queue);\n    localStorage.setItem('watch', JSON.stringify(watchArray));\n    movieWatched.innerText = 'REMOVE FROM WATCHED';\n    checkclass = movieWatched.matches('.add-to-queue');\n    if (checkclass) {\n      movieWatched.classList.toggle('add-to-queue');\n      movieWatched.classList.toggle('add-to-watched');\n    }\n  } else {\n    watchArray.splice(checkArrary, 1);\n    localStorage.setItem('watch', JSON.stringify(watchArray));\n    movieWatched.innerText = 'ADD TO WATCHED';\n    checkclass = movieWatched.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieWatched.classList.toggle('add-to-queue');\n      movieWatched.classList.toggle('add-to-watched');\n    }\n  }\n}\n"],"names":["$5q1tW","parcelRequire","$4281cb08e8defb2a$var$Queue","constructor","id","title","genres","release_date","poster_path","this","$4281cb08e8defb2a$var$movieGallery","document","querySelector","$4281cb08e8defb2a$var$myLibaryGallery","console","log","$4281cb08e8defb2a$var$checkclass","$4281cb08e8defb2a$var$mylibID","$4281cb08e8defb2a$var$mylibtitle","$4281cb08e8defb2a$var$mylibgenres","$4281cb08e8defb2a$var$mylibrelease_date","$4281cb08e8defb2a$var$mylibposter_path","$4281cb08e8defb2a$var$checkArrary","addEventListener","e","movieId","target","closest","getAttribute","$4281cb08e8defb2a$var$renderModal","then","$4281cb08e8defb2a$var$modal","classList","toggle","$4281cb08e8defb2a$var$watchArray","$4281cb08e8defb2a$var$queueArray","$4281cb08e8defb2a$var$movieWatched","$4281cb08e8defb2a$var$movieQueued","async","movieID","add","movieName","movieInfo","moviePoster","movieAbout","style","display","movie","getMovieInfo","vote","$ioFHx","updateMovieModalPosterDimension","updateMoviePosterUrl","textContent","src","MOVIE__POSTERS__URL","alt","width","movieModalPosterWidth","height","movieModalPosterHeight","innerHTML","vote_average","toString","length","toFixed","vote_count","popularity","original_title","toUpperCase","map","gen","name","overview","localStorage","getItem","getWatch","JSON","parse","getqueue","findIndex","item","innerText","matches","getwatch","queue","push","setItem","stringify","splice"],"version":3,"file":"index.28ee42a3.js.map"}