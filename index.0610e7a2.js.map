{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SCAAC,EAAe,CACX,CACEC,GAAI,GACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,aAER,CACED,GAAI,GACJC,KAAM,aAER,CACED,GAAI,GACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,SAER,CACED,GAAI,GACJC,KAAM,eAER,CACED,GAAI,GACJC,KAAM,SAER,CACED,GAAI,MACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,WAER,CACED,GAAI,GACJC,KAAM,WAER,CACED,GAAI,GACJC,KAAM,UAER,CACED,GAAI,MACJC,KAAM,SAER,CACED,GAAI,KACJC,KAAM,WAER,CACED,GAAI,MACJC,KAAM,WAER,CACED,GAAI,IACJC,KAAM,mBAER,CACED,GAAI,MACJC,KAAM,YAER,CACED,GAAI,GACJC,KAAM,YAER,CACED,GAAI,MACJC,KAAM,OAER,CACED,GAAI,GACJC,KAAM,YDrEZ,MAAMC,EAAYC,SAASC,cAAc,iBAIdC,YAgC3BA,eAA0BC,SACF,EAAAT,EAAAU,gBACbD,EAAOE,KAAKC,IACf,MAAMC,EAAOP,SAASQ,cAAc,kBAChCD,EAAKE,UAAUC,IAAI,cACnBH,EAAKI,UACD,iDAAiDL,EAAMM,uJAG7CN,EAAMO,2GA/BhC,SAAmBC,EAAWC,GAC1B,MAAMC,EAAkBD,EAASV,KAAIY,GACrBH,EAAUI,MAAKC,GAAQA,EAAKtB,KAAOoB,IAEpCnB,OAYf,OATYkB,EAAgBI,QAAO,CAACC,EAAKC,EAAOC,EAAOC,IACjDA,EAAIC,OAAS,EACT,GAAGD,EAAI,OAAOA,EAAI,KAElBA,EAAIE,KAAK,O,CAuBGC,CAAU/B,EAAWU,EAAMsB,wHAG3B,IAAIC,KAAKvB,EAAMwB,cAAcC,kEAGnDhC,EAAUiC,YAAYzB,GACtBA,EAAK0B,iBAAiB,SAAS,IAAMC,eAAe5B,IAAO,G,CA/C3D6B,QAHmB,EAAAzC,EAAA0C,qBAAoB,IAEpBC,KAAKC,QACP,EAGrBC","sources":["src/js/movie-gallery.js","src/js/genre-list.js"],"sourcesContent":["import { fetchTrendingMovies, getMovieInfo} from './API-requests.js';\nimport genreList from './genre-list.js';\n\n\n\n// DOM elements\nconst movieList = document.querySelector(\".card-gallery\");\n\n\n// fuction that returns trending movies\nconst showTrendingMovies = async () => { \n    const list = await fetchTrendingMovies(1);\n    // console.log(list.data.results)\n    const movie = list.data.results;\n    renderInfo(movie)\n}\n\nshowTrendingMovies();\n\n//Function to get genre names\nfunction getGenres(genreList, genreIds) {\n    const arrOfGenresName = genreIds.map(currentId => {\n      const genre = genreList.find(elem => elem.id === currentId);\n  \n      return genre.name;\n    });\n  \n    const str = arrOfGenresName.reduce((acc, genre, index, arr) => {\n      if (arr.length > 2) {\n        acc = `${arr[0]}, ${arr[1]}`;\n      } else {\n        acc = arr.join(', ');\n      }\n      \n      return acc;\n    });\n    return str;\n  }\n  \n\n\n// function that renders movie info to the dom\nasync function renderInfo(movies) {\n    const genre = await getMovieInfo();\n    return movies.map((movie) => {\n        const card = document.createElement(\"div.movie-card\")\n            card.classList.add('movie-card');\n            card.innerHTML = \n                `<img src=\"https://image.tmdb.org/t/p/original/${movie.poster_path}\" class=\"movie-poster\"/>\n                <ul class=\"movie_info\">\n                    <li class=\"movie_title\">\n                        ${movie.title}\n                    </li>\n                    <li class=\"movie_genre\">\n                        ${getGenres(genreList, movie.genre_ids)};\n                    </li>\n                    <li class=\"movie_release-date\">\n                        ${new Date(movie.release_date).getFullYear()}\n                    </li>\n                </ul>`;\n    movieList.appendChild(card);\n    card.addEventListener('click', () => showMovieModal(movie));\n  });\n}\n\n\n// const showMovieCard = (movies) => {\n//     const\n// }\n","export default [\n    {\n      id: 28,\n      name: 'Action',\n    },\n    {\n      id: 12,\n      name: 'Adventure',\n    },\n    {\n      id: 16,\n      name: 'Animation',\n    },\n    {\n      id: 35,\n      name: 'Comedy',\n    },\n    {\n      id: 80,\n      name: 'Crime',\n    },\n    {\n      id: 99,\n      name: 'Documentary',\n    },\n    {\n      id: 18,\n      name: 'Drama',\n    },\n    {\n      id: 10751,\n      name: 'Family',\n    },\n    {\n      id: 14,\n      name: 'Fantasy',\n    },\n    {\n      id: 36,\n      name: 'History',\n    },\n    {\n      id: 27,\n      name: 'Horror',\n    },\n    {\n      id: 10402,\n      name: 'Music',\n    },\n    {\n      id: 9648,\n      name: 'Mystery',\n    },\n    {\n      id: 10749,\n      name: 'Romance',\n    },\n    {\n      id: 878,\n      name: 'Science Fiction',\n    },\n    {\n      id: 10770,\n      name: 'TV Movie',\n    },\n    {\n      id: 53,\n      name: 'Thriller',\n    },\n    {\n      id: 10752,\n      name: 'War',\n    },\n    {\n      id: 37,\n      name: 'Western',\n    },\n  ];"],"names":["$5q1tW","parcelRequire","$2e77ca5c11e47559$export$2e2bcd8739ae039","id","name","$103e7e6c9cd8a571$var$movieList","document","querySelector","async","movies","getMovieInfo","map","movie","card","createElement","classList","add","innerHTML","poster_path","title","genreList1","genreIds","arrOfGenresName","currentId","find","elem","reduce","acc","genre","index","arr","length","join","$103e7e6c9cd8a571$var$getGenres","genre_ids","Date","release_date","getFullYear","appendChild","addEventListener","showMovieModal","$103e7e6c9cd8a571$var$renderInfo","fetchTrendingMovies","data","results","$103e7e6c9cd8a571$var$showTrendingMovies"],"version":3,"file":"index.0610e7a2.js.map"}