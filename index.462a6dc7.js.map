{"mappings":"iiBAAA,I,EAAAA,EAAAC,EAAA,S,0BCAAC,EAAe,CACX,CACEC,GAAI,GACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,aAER,CACED,GAAI,GACJC,KAAM,aAER,CACED,GAAI,GACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,SAER,CACED,GAAI,GACJC,KAAM,eAER,CACED,GAAI,GACJC,KAAM,SAER,CACED,GAAI,MACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,WAER,CACED,GAAI,GACJC,KAAM,WAER,CACED,GAAI,GACJC,KAAM,UAER,CACED,GAAI,MACJC,KAAM,SAER,CACED,GAAI,KACJC,KAAM,WAER,CACED,GAAI,MACJC,KAAM,WAER,CACED,GAAI,IACJC,KAAM,mBAER,CACED,GAAI,MACJC,KAAM,YAER,CACED,GAAI,GACJC,KAAM,YAER,CACED,GAAI,MACJC,KAAM,OAER,CACED,GAAI,GACJC,KAAM,YDvENC,EAAYC,SAASC,cAAc,iBAGnCC,G,EAAqBC,EAAAT,EAAA,CAAAS,EAAAC,GAAAC,MAAA,SAAAC,I,mFACN,EAAAC,EAAAC,qBAAoB,G,OAGvCC,EAHUC,EAAAC,KAESC,KAAKC,S,uFAO1B,SAASC,EAAUC,EAAWC,GAgB5B,OAfwBA,EAASC,KAAI,SAAAC,GAGnC,OAFcH,EAAUI,MAAK,SAAAC,G,OAAQA,EAAKvB,KAAOqB,C,IAEpCpB,I,IAGauB,QAAO,SAACC,EAAKC,EAAOC,EAAOC,GAOrD,OANIA,EAAIC,OAAS,EACT,GAAcC,OAAXF,EAAI,GAAG,MAAWE,OAAPF,EAAI,IAElBA,EAAIG,KAAK,K,aASNnB,EAAWoB,G,OAAXC,EAAUC,MAAAC,KAAAC,U,UAAVH,I,OAAAA,EAAf3B,EAAAT,EAAA,CAAAS,EAAAC,GAAAC,MAAA,SAAAC,EAA0BuB,G,2FAEjBA,EAAOZ,KAAI,SAAAiB,GAChB,IAAMC,EAAOnC,SAASoC,cAAc,OACpCD,EAAKE,aAAa,OAAQH,EAAMrC,IAChCsC,EAAKG,UAAUC,IAAI,cACnBJ,EAAKK,UAAY,iDAKKb,OAJpBO,EAAMO,YACP,6IAMqBd,OAHAO,EAAMQ,MAAM,uGAMZf,OAHAb,EAAUlB,EAAWsC,EAAMS,WAAW,+GAGKhB,OAA3C,IAAIiB,KAAKV,EAAMW,cAAcC,cAAc,sDAGjE/C,EAAUgD,YAAYZ,E,iDApBDJ,MAAAC,KAAAC,U,CAvBzB/B,G","sources":["src/js/movie-gallery.js","src/js/genre-list.js"],"sourcesContent":["import { fetchTrendingMovies, getMovieInfo } from './API-requests.js';\nimport genreList from './genre-list.js';\n\n// DOM elements\nconst movieList = document.querySelector('.card-gallery');\n\n// fuction that returns trending movies\nconst showTrendingMovies = async () => {\n  const list = await fetchTrendingMovies(1);\n  // console.log(list.data.results)\n  const movie = list.data.results;\n  renderInfo(movie);\n};\n\nshowTrendingMovies();\n\n//Function to get genre names\nfunction getGenres(genreList, genreIds) {\n  const arrOfGenresName = genreIds.map(currentId => {\n    const genre = genreList.find(elem => elem.id === currentId);\n\n    return genre.name;\n  });\n\n  const str = arrOfGenresName.reduce((acc, genre, index, arr) => {\n    if (arr.length > 2) {\n      acc = `${arr[0]}, ${arr[1]}`;\n    } else {\n      acc = arr.join(', ');\n    }\n\n    return acc;\n  });\n  return str;\n}\n\n// function that renders movie info to the dom\nasync function renderInfo(movies) {\n  // const genre = await getMovieInfo();\n  return movies.map(movie => {\n    const card = document.createElement('div');\n    card.setAttribute('data', movie.id);\n    card.classList.add('movie-card');\n    card.innerHTML = `<img src=\"https://image.tmdb.org/t/p/original/${\n      movie.poster_path\n    }\" class=\"movie-poster\"/>\n                <ul class=\"movie_info\">\n                    <li class=\"movie_title\">\n                        ${movie.title}\n                    </li>\n                    <li class=\"movie_genre\">\n                        ${getGenres(genreList, movie.genre_ids)};\n                    </li>\n                    <li class=\"movie_release-date\">\n                        ${new Date(movie.release_date).getFullYear()}\n                    </li>\n                </ul>`;\n    movieList.appendChild(card);\n  });\n}\n\n// const showMovieCard = (movies) => {\n//     const\n// }\n","export default [\n    {\n      id: 28,\n      name: 'Action',\n    },\n    {\n      id: 12,\n      name: 'Adventure',\n    },\n    {\n      id: 16,\n      name: 'Animation',\n    },\n    {\n      id: 35,\n      name: 'Comedy',\n    },\n    {\n      id: 80,\n      name: 'Crime',\n    },\n    {\n      id: 99,\n      name: 'Documentary',\n    },\n    {\n      id: 18,\n      name: 'Drama',\n    },\n    {\n      id: 10751,\n      name: 'Family',\n    },\n    {\n      id: 14,\n      name: 'Fantasy',\n    },\n    {\n      id: 36,\n      name: 'History',\n    },\n    {\n      id: 27,\n      name: 'Horror',\n    },\n    {\n      id: 10402,\n      name: 'Music',\n    },\n    {\n      id: 9648,\n      name: 'Mystery',\n    },\n    {\n      id: 10749,\n      name: 'Romance',\n    },\n    {\n      id: 878,\n      name: 'Science Fiction',\n    },\n    {\n      id: 10770,\n      name: 'TV Movie',\n    },\n    {\n      id: 53,\n      name: 'Thriller',\n    },\n    {\n      id: 10752,\n      name: 'War',\n    },\n    {\n      id: 37,\n      name: 'Western',\n    },\n  ];"],"names":["$bpxeT","parcelRequire","$a2c743e5244d496c$export$2e2bcd8739ae039","id","name","$023c6bba026fc3c7$var$movieList","document","querySelector","$023c6bba026fc3c7$var$showTrendingMovies","$parcel$interopDefault","$2TvXO","mark","_callee","$5kFwL","fetchTrendingMovies","$023c6bba026fc3c7$var$renderInfo","_ctx","sent","data","results","$023c6bba026fc3c7$var$getGenres","genreList1","genreIds","map","currentId","find","elem","reduce","acc","genre","index","arr","length","concat","join","movies","$023c6bba026fc3c7$var$_renderInfo","apply","this","arguments","movie","card","createElement","setAttribute","classList","add","innerHTML","poster_path","title","genre_ids","Date","release_date","getFullYear","appendChild"],"version":3,"file":"index.462a6dc7.js.map"}