{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,oDAGAC,EAAA,SAAMC,EACQC,EAAIC,EAAOC,EAAQC,EAAcC,G,0BAC3CC,KAAKL,GAAKA,EACVK,KAAKJ,MAAQA,EACbI,KAAKH,OAASA,EACdG,KAAKF,aAAeA,EACpBE,KAAKD,YAAcA,C,EAIjBE,EAAeC,SAASC,cAAc,iBACxCC,EAAU,GACVC,EAAa,GACbC,EAAc,GACdC,EAAoB,GACpBC,EAAmB,GACnBC,GAAc,EAElBR,EAAaS,iBAAiB,SAAS,SAAAC,GAErC,IACMC,EADSD,EAAEE,OAAOC,QAAQ,OACTC,aAAa,QACpCX,EAAUQ,E,SAkBeI,G,OAAZC,EAAWC,MAAAlB,KAAAmB,U,CAfxBC,CAAYR,GAASS,MAAK,W,OAAMC,EAAMC,UAAUC,OAAO,Y,OAGzD,IAAMF,EAAQpB,SAASC,cAAc,yBAGjCsB,EAAa,GACbC,EAAa,GAEXC,EAAezB,SAASC,cAAc,kBACtCyB,EAAc1B,SAASC,cAAc,iB,SAK5Bc,I,OAAAA,EAAfY,EAAAtC,EAAA,CAAAsC,EAAAC,GAAAC,MAAA,SAAAC,EAA2BhB,G,IAKnBiB,EACAC,EACAC,EACAC,EAEAC,EAGGC,EAyCDC,EASAC,E,yEAlDRF,EAAA,SAAoBG,GAClB,OAAIA,EAAKC,WAAWC,OAAS,EACpBF,EAAKG,QAAQ,GACRH,C,EAdCvC,SAASC,cAAc,iBAC/BO,iBAAiB,SAAS,W,OAAMY,EAAMC,UAAUsB,IAAI,Y,IAEvDZ,EAAY/B,SAASC,cAAc,eACnC+B,EAAYhC,SAASC,cAAc,qBACnCgC,EAAcjC,SAASC,cAAc,uBACrCiC,EAAalC,SAASC,cAAc,4B,UAEtB,EAAA2C,EAAAC,cAAa/B,G,OAA3BqB,EAAKW,EAAAC,MAUX,EAAAC,EAAAC,oCACA,EAAAD,EAAAE,wBAEAC,QAAQC,IAAIJ,EAAAK,uBACZF,QAAQC,IAAIJ,EAAAM,qBAEZvB,EAAUwB,YAAcpB,EAAMzC,MAC9BuC,EAAYuB,IAAM,GAClBvB,EAAYuB,IAAM,GAAyBC,OAAtBT,EAAAM,qBAAwCG,OAAlBtB,EAAMtC,aACjDoC,EAAYyB,IAAM,GAAeD,OAAZtB,EAAMzC,OAC3BuC,EAAY0B,MAAQ,GAAyBF,OAAtBT,EAAAK,uBACvBpB,EAAY2B,OAAS,GAA0BH,OAAvBT,EAAAa,wBAGxB7B,EAAU8B,UAAY,gFAGPL,OAF4DrB,EACzED,EAAM4B,cACN,eACyCN,OAD5BtB,EAAM6B,WAAW,qDAEeP,OADJtB,EAAM8B,WAAW,yDAEtBR,OADStB,EAAM+B,eAAeC,cAAc,gDAGhFV,OAFoCtB,EAAMxC,OAAOyE,KACjD,SAAAC,G,MAAO,IAAMA,EAAIC,I,IACjB,YAGFpC,EAAWqB,YAAcpB,EAAMoC,SAE/BpE,EAAagC,EAAMzC,MACrBU,EAAc+B,EAAMxC,OAAOyE,KAAI,SAAAC,G,MAAO,IAAMA,EAAIC,I,IAChDjE,EAAoB8B,EAAMvC,aAC1BU,EAAmB6B,EAAMtC,YAE6B,OAAlC2E,aAAaC,QAAQ,UAE/BpC,EAAWmC,aAAaC,QAAQ,SACtClD,EAAamD,KAAKC,MAAMtC,IAGxBd,EAAa,GAEuC,OAAlCiD,aAAaC,QAAQ,UAGjCnC,EAAWkC,aAAaC,QAAQ,SACtCjD,EAAakD,KAAKC,MAAMrC,IAExBd,EAAa,IAGK,IADAD,EAAWqD,WAAU,SAAAC,G,OAAOA,EAAKpF,KAAOS,C,KAE1DuB,EAAaqD,UAAY,sBACZrD,EAAasD,QAAQ,mBAEhCtD,EAAaJ,UAAUC,OAAO,gBAC9BG,EAAaJ,UAAUC,OAAO,qBAGhCG,EAAaqD,UAAY,iBACZrD,EAAasD,QAAQ,qBAGhCtD,EAAaJ,UAAUC,OAAO,kBAC9BG,EAAaJ,UAAUC,OAAO,mBAOd,IAFAE,EAAWoD,WAAU,SAAAC,G,OAAOA,EAAKpF,KAAOS,C,KAG1DwB,EAAYoD,UAAY,oBACXpD,EAAYqD,QAAQ,mBAE/BrD,EAAYL,UAAUC,OAAO,gBAC7BI,EAAYL,UAAUC,OAAO,qBAG/BI,EAAYoD,UAAY,eACVpD,EAAYqD,QAAQ,qBAGhCrD,EAAYL,UAAUC,OAAO,gBAC7BI,EAAYL,UAAUC,OAAO,oB,6CAtGTN,MAAAlB,KAAAmB,U,CAJ1BQ,EAAajB,iBAAiB,SAuJ9B,WAEG,GADsD,OAAlCgE,aAAaC,QAAQ,SAC3B,CACb,IAAMO,EAAWR,aAAaC,QAAQ,SACvClD,EAAamD,KAAKC,MAAMK,E,MAItBzD,EAAa,GAKhB,GAHF4B,QAAQC,IAAI7B,GACVhB,EAAcgB,EAAWqD,WAAU,SAAAC,G,OAAQA,EAAKpF,KAAOS,C,IACvDiD,QAAQC,IAAI7C,IACQ,IAAhBA,EAAoB,CACtB,IAAM0E,EAAQ,IAAI1F,EAAMW,EAASC,EAAYC,EAAaC,EAAmBC,GAC7E6C,QAAQC,IACZ7B,EAAW2D,KAAKD,GACZT,aAAaW,QAAQ,QAAST,KAAKU,UAAU7D,IAC7CE,EAAaqD,UAAY,sBAChBrD,EAAasD,QAAQ,mBAE5BtD,EAAaJ,UAAUC,OAAO,gBAC9BG,EAAaJ,UAAUC,OAAO,kB,MAK/BC,EAAW8D,OAAO9E,EAAa,GAC5BiE,aAAaW,QAAQ,QAAST,KAAKU,UAAU7D,IACjDE,EAAaqD,UAAY,iBACXrD,EAAasD,QAAQ,qBAGjCtD,EAAaJ,UAAUC,OAAO,gBAC9BG,EAAaJ,UAAUC,OAAO,kB,IAxLpCI,EAAYlB,iBAAiB,SAiH7B,WAEG,GADmD,OAAlCgE,aAAaC,QAAQ,SACxB,CACb,IAAMnC,EAAWkC,aAAaC,QAAQ,SACvCjD,EAAakD,KAAKC,MAAMrC,E,MAItBd,EAAa,GAIhB,IAAoB,KADpBjB,EAAciB,EAAWoD,WAAU,SAAAC,G,OAAOA,EAAKpF,KAAOS,C,KAC9B,CACvB,IAAM+E,EAAQ,IAAI1F,EAAMW,EAASC,EAAYC,EAAaC,EAAmBC,GAChFkB,EAAW0D,KAAKD,GACZT,aAAaW,QAAQ,QAAST,KAAKU,UAAU5D,IAC7CE,EAAYoD,UAAY,oBACXpD,EAAYqD,QAAQ,mBAE/BrD,EAAYL,UAAUC,OAAO,gBAC7BI,EAAYL,UAAUC,OAAO,kB,MAI9BE,EAAW6D,OAAO9E,EAAa,GAC5BiE,aAAaW,QAAQ,QAAST,KAAKU,UAAU5D,IACjDE,EAAYoD,UAAY,eACVpD,EAAYqD,QAAQ,qBAGhCrD,EAAYL,UAAUC,OAAO,gBAC7BI,EAAYL,UAAUC,OAAO,kB","sources":["src/js/movie-modal.js"],"sourcesContent":["import { getMovieInfo } from './API-requests.js';\nimport { MOVIE__POSTERS__URL, updateMovieModalPosterDimension, updateMoviePosterUrl, movieModalPosterWidth, movieModalPosterHeight } from './movie-poster-data.js';\n\nclass Queue {\n  constructor(id, title, genres, release_date, poster_path) {\n    this.id = id;\n    this.title = title;\n    this.genres = genres;\n    this.release_date = release_date;\n    this.poster_path = poster_path;\n  }\n}\n\nconst movieGallery = document.querySelector('.card-gallery');\nlet mylibID = \"\"\nlet mylibtitle = \"\"\nlet mylibgenres = \"\"\nlet mylibrelease_date = \"\"\nlet mylibposter_path = \"\"\nlet checkArrary = -1;\nlet checkclass;\nmovieGallery.addEventListener('click', e => {\n  //get movie id\n  const parent = e.target.closest('div');\n  const movieId = parent.getAttribute('data');\n  mylibID = movieId;\n\n  // show modal after html is rendered. Image is rendering after\n  renderModal(movieId).then(() => modal.classList.toggle('is-hidden'));\n});\n\nconst modal = document.querySelector('.movie-modal__overlay');\n\n\nlet watchArray = [];\nlet queueArray = [];\nlet currentMovie;\nconst movieWatched = document.querySelector('#watchedButton');\nconst movieQueued = document.querySelector('#queuedButton');\nmovieWatched.addEventListener('click', watchedProcess);\nmovieQueued.addEventListener('click', queueProcess);\n\n\nasync function renderModal(movieID) {\n  //close modal\n  const closeBtn = document.querySelector('.close-button');\n  closeBtn.addEventListener('click', () => modal.classList.add('is-hidden'));\n\n  const movieName = document.querySelector('.movie-name');\n  const movieInfo = document.querySelector('.movie-info-block');\n  const moviePoster = document.querySelector('.modal-movie-poster');\n  const movieAbout = document.querySelector('.movie-about-description');\n\n  const movie = await getMovieInfo(movieID);\n\n  // round average vote like 7.5975\n  function roundVotes(vote) {\n    if (vote.toString().length > 3) {\n      return vote.toFixed(2);\n    } else return vote;\n  }\n\n  // MOVIE IMAGE SPECS\n  updateMovieModalPosterDimension();\n  updateMoviePosterUrl();\n\n  console.log(movieModalPosterWidth);\n  console.log(MOVIE__POSTERS__URL);\n  //movie info\n  movieName.textContent = movie.title;\n  moviePoster.src = '';\n  moviePoster.src = `${MOVIE__POSTERS__URL}${movie.poster_path}`;\n  moviePoster.alt = `${movie.title}`;\n  moviePoster.width = `${movieModalPosterWidth}`;\n  moviePoster.height = `${movieModalPosterHeight}`;\n\n  //movie details\n  movieInfo.innerHTML = `\n  <p class='movie-info'>Vote / Votes</p> <p><span class='modal-movie-rate'>${roundVotes(\n    movie.vote_average\n  )}</span> /  ${movie.vote_count}</p>\n  <p  class='movie-info'>Popularity</p> <p>${movie.popularity}</p>\n  <p  class='movie-info'>Original Title</p> <p>${movie.original_title.toUpperCase()}</p>\n  <p  class='movie-info'>Genre</p> <p>${movie.genres.map(\n    gen => ' ' + gen.name\n  )}</p>\n  `;\n\n  movieAbout.textContent = movie.overview;\n\n  mylibtitle = movie.title\nmylibgenres = movie.genres.map(gen => ' ' + gen.name)\nmylibrelease_date = movie.release_date\nmylibposter_path = movie.poster_path\n \n  const watchSet = (localStorage.getItem('watch') !== null);\n  if (watchSet) {\n    const getWatch = localStorage.getItem('watch')\n    watchArray = JSON.parse(getWatch)\n  \n  }else {\n    watchArray = []\n  }\n    const queueSet = (localStorage.getItem('queue') !== null);\n\n  if (queueSet) {\n    const getqueue = localStorage.getItem('queue')\n    queueArray = JSON.parse(getqueue)\n  } else {\n    queueArray = []\n  }\n  const watchresult = watchArray.findIndex(item=> item.id === mylibID )\n  if (watchresult !== -1) {\n    movieWatched.innerText = \"REMOVE FROM WATCHED\"\n    checkclass = movieWatched.matches('.add-to-queue');\n    if (checkclass) {\n      movieWatched.classList.toggle(\"add-to-queue\");\n      movieWatched.classList.toggle(\"add-to-watched\");\n    }\n  } else {\n    movieWatched.innerText = \"ADD TO WATCHED\"\n    checkclass = movieWatched.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieWatched.classList.toggle(\"add-to-watched\");\n      movieWatched.classList.toggle(\"add-to-queue\");\n      \n    }\n  } ;\n\n  const queueresult = queueArray.findIndex(item=> item.id === mylibID )\n \n  if (queueresult !== -1) {\n    movieQueued.innerText = \"REMOVE FROM QUEUE\" \n    checkclass = movieQueued.matches('.add-to-queue');\n    if (checkclass) {\n      movieQueued.classList.toggle(\"add-to-queue\");\n      movieQueued.classList.toggle(\"add-to-watched\");\n    }\n   } else {\n    movieQueued.innerText = \"ADD TO QUEUE\"\n     checkclass = movieQueued.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieQueued.classList.toggle(\"add-to-queue\");\n      movieQueued.classList.toggle(\"add-to-watched\");\n    }\n\n  };\n\n}\n\n\nfunction queueProcess() {\n  const queueSet = (localStorage.getItem('queue') !== null);\n   if (queueSet) {\n    const getqueue = localStorage.getItem('queue')\n   queueArray = JSON.parse(getqueue)\n     \n\n   } else {\n     queueArray = []\n   }\n\n  checkArrary = queueArray.findIndex(item=> item.id === mylibID )\n  if (checkArrary === -1) {\n   const queue = new Queue(mylibID, mylibtitle, mylibgenres, mylibrelease_date, mylibposter_path)\nqueueArray.push(queue)\n    localStorage.setItem('queue', JSON.stringify(queueArray))\n    movieQueued.innerText = \"REMOVE FROM QUEUE\"\n    checkclass = movieQueued.matches('.add-to-queue');\n    if (checkclass) {\n      movieQueued.classList.toggle(\"add-to-queue\");\n      movieQueued.classList.toggle(\"add-to-watched\");\n    }\n  \n  } else {\n     queueArray.splice(checkArrary, 1)\n        localStorage.setItem('queue', JSON.stringify(queueArray))\n    movieQueued.innerText = \"ADD TO QUEUE\"\n     checkclass = movieQueued.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieQueued.classList.toggle(\"add-to-queue\");\n      movieQueued.classList.toggle(\"add-to-watched\");\n    }\n      }\n    }\n  \n\nfunction watchedProcess() {\n     const queueSet = (localStorage.getItem('watch') !== null);\n   if (queueSet) {\n    const getwatch = localStorage.getItem('watch')\n   watchArray = JSON.parse(getwatch)\n     \n\n   } else {\n     watchArray = []\n   }\nconsole.log(watchArray)\n  checkArrary = watchArray.findIndex(item => item.id === mylibID)\n  console.log(checkArrary)\n  if (checkArrary === -1) {\n    const queue = new Queue(mylibID, mylibtitle, mylibgenres, mylibrelease_date, mylibposter_path)\n    console.log\nwatchArray.push(queue)\n    localStorage.setItem('watch', JSON.stringify(watchArray))\n    movieWatched.innerText = \"REMOVE FROM WATCHED\"\ncheckclass = movieWatched.matches('.add-to-queue');\n    if (checkclass) {\n      movieWatched.classList.toggle(\"add-to-queue\");\n      movieWatched.classList.toggle(\"add-to-watched\");\n    }\n    \n  \n  } else {\n     watchArray.splice(checkArrary, 1)\n        localStorage.setItem('watch', JSON.stringify(watchArray))\n    movieWatched.innerText = \"ADD TO WATCHED\"\n     checkclass = movieWatched.matches('.add-to-watched');\n\n    if (checkclass) {\n      movieWatched.classList.toggle(\"add-to-queue\");\n      movieWatched.classList.toggle(\"add-to-watched\");\n    }\n      }\n    }\n"],"names":["$bpxeT","parcelRequire","$8659643f5d4aff8d$var$Queue","Queue","id","title","genres","release_date","poster_path","this","$8659643f5d4aff8d$var$movieGallery","document","querySelector","$8659643f5d4aff8d$var$mylibID","$8659643f5d4aff8d$var$mylibtitle","$8659643f5d4aff8d$var$mylibgenres","$8659643f5d4aff8d$var$mylibrelease_date","$8659643f5d4aff8d$var$mylibposter_path","$8659643f5d4aff8d$var$checkArrary","addEventListener","e","movieId","target","closest","getAttribute","movieID","$8659643f5d4aff8d$var$_renderModal","apply","arguments","$8659643f5d4aff8d$var$renderModal","then","$8659643f5d4aff8d$var$modal","classList","toggle","$8659643f5d4aff8d$var$watchArray","$8659643f5d4aff8d$var$queueArray","$8659643f5d4aff8d$var$movieWatched","$8659643f5d4aff8d$var$movieQueued","$parcel$interopDefault","$2TvXO","mark","_callee","movieName","movieInfo","moviePoster","movieAbout","movie","roundVotes","getWatch","getqueue","vote","toString","length","toFixed","add","$5kFwL","getMovieInfo","_ctx","sent","$96x7w","updateMovieModalPosterDimension","updateMoviePosterUrl","console","log","movieModalPosterWidth","MOVIE__POSTERS__URL","textContent","src","concat","alt","width","height","movieModalPosterHeight","innerHTML","vote_average","vote_count","popularity","original_title","toUpperCase","map","gen","name","overview","localStorage","getItem","JSON","parse","findIndex","item","innerText","matches","getwatch","queue","push","setItem","stringify","splice"],"version":3,"file":"index.f8d36923.js.map"}